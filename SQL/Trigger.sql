CREATE TRIGGER trg_update_shoes_quantity
ON SHOES_COLOR_SIZE
AFTER INSERT, UPDATE, DELETE
AS
BEGIN
    -- Cập nhật số lượng giày trong SHOES_PRODUCT dựa trên thay đổi ở SHOES_COLOR_SIZE
    UPDATE sp
    SET QUANTITY = COALESCE(scs.TotalStock, 0)
    FROM SHOES_PRODUCT sp
    LEFT JOIN (
        -- Tính tổng số lượng tồn kho theo SHOES_ID
        SELECT SHOES_ID, SUM(STOCK) AS TotalStock
        FROM SHOES_COLOR_SIZE
        GROUP BY SHOES_ID
    ) scs ON sp.SHOES_ID = scs.SHOES_ID
    WHERE sp.SHOES_ID IN (
        -- Lấy danh sách các SHOES_ID bị ảnh hưởng trong bảng Inserted hoặc Deleted
        SELECT DISTINCT SHOES_ID FROM inserted
        UNION
        SELECT DISTINCT SHOES_ID FROM deleted
    );
END;

go

CREATE TRIGGER TRG_UPDATE_VOUCHER_STATUS
ON VOUCHER
AFTER INSERT, UPDATE
AS
BEGIN
    SET NOCOUNT ON;

    -- Cập nhật trạng thái thành 'EXPIRED' nếu END_DATE đã qua
    UPDATE VOUCHER
    SET STATUS = 'EXPIRED'
    WHERE END_DATE < GETDATE() AND STATUS = 'ACTIVE';
END;


go

CREATE PROCEDURE SP_AUTO_EXPIRE_VOUCHERS
AS
BEGIN
    SET NOCOUNT ON;
    
    UPDATE VOUCHER
    SET STATUS = 'EXPIRED'
    WHERE END_DATE < GETDATE() AND STATUS = 'ACTIVE';
END

EXEC SP_AUTO_EXPIRE_VOUCHERS;